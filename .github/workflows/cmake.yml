name: CMake

on:
  push:
    branches: [ builds_with_liblx ]
  pull_request:
    branches: [ builds_with_liblx ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Prepare Build for libLX
      shell: bash
      run: |
        mkdir ${{runner.workspace}}/liblx
        git clone https://github.com/sbmlteam/liblx.git ${{runner.workspace}}/liblx
    
    - name: Build libLX
      run: |
        cmake -B ${{runner.workspace}}/liblx-build -S ${{runner.workspace}}/liblx
        cmake --build ${{runner.workspace}}/liblx-build
        
    - name: Prepare Build Environment for testsbxml
      shell: bash
      run: |
        mkdir ${{runner.workspace}}/dependencies
        mkdir ${{runner.workspace}}/dependencies/include
        mkdir ${{runner.workspace}}/dependencies/lib
        cp -r ${{runner.workspace}}/liblx/src/liblx ${{runner.workspace}}/dependencies/include
        cp ${{runner.workspace}}/liblx-build/src/liblx.* ${{runner.workspace}}/dependencies/lib
        
    - name: Configure CMake
      run: |
        cmake -B ${{runner.workspace}}/build \
          -DLIBLX_INCLUDE_DIR=${{runner.workspace}}/dependencies/include
          -DLIBLX_LIBRARY=${{runner.workspace}}/dependencies/lib
          -DWITH_SWIG=False
          -DWITH_EXAMPLES=True

    - name: Build
      run: cmake --build ${{runner.workspace}}/build
